{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":482,"sourceType":"datasetVersion","datasetId":228}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:05.960475Z","iopub.execute_input":"2025-08-02T09:18:05.960960Z","iopub.status.idle":"2025-08-02T09:18:05.974617Z","shell.execute_reply.started":"2025-08-02T09:18:05.960784Z","shell.execute_reply":"2025-08-02T09:18:05.973777Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/pima-indians-diabetes-database/diabetes.csv\n","output_type":"stream"}],"execution_count":67},{"cell_type":"code","source":"df=pd.read_csv('/kaggle/input/pima-indians-diabetes-database/diabetes.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:13.096588Z","iopub.execute_input":"2025-08-02T09:18:13.096953Z","iopub.status.idle":"2025-08-02T09:18:13.107152Z","shell.execute_reply.started":"2025-08-02T09:18:13.096923Z","shell.execute_reply":"2025-08-02T09:18:13.105862Z"}},"outputs":[],"execution_count":68},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:13.750207Z","iopub.execute_input":"2025-08-02T09:18:13.750546Z","iopub.status.idle":"2025-08-02T09:18:13.763651Z","shell.execute_reply.started":"2025-08-02T09:18:13.750519Z","shell.execute_reply":"2025-08-02T09:18:13.762530Z"}},"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n0            6      148             72             35        0  33.6   \n1            1       85             66             29        0  26.6   \n2            8      183             64              0        0  23.3   \n3            1       89             66             23       94  28.1   \n4            0      137             40             35      168  43.1   \n\n   DiabetesPedigreeFunction  Age  Outcome  \n0                     0.627   50        1  \n1                     0.351   31        0  \n2                     0.672   32        1  \n3                     0.167   21        0  \n4                     2.288   33        1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Pregnancies</th>\n      <th>Glucose</th>\n      <th>BloodPressure</th>\n      <th>SkinThickness</th>\n      <th>Insulin</th>\n      <th>BMI</th>\n      <th>DiabetesPedigreeFunction</th>\n      <th>Age</th>\n      <th>Outcome</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>148</td>\n      <td>72</td>\n      <td>35</td>\n      <td>0</td>\n      <td>33.6</td>\n      <td>0.627</td>\n      <td>50</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>85</td>\n      <td>66</td>\n      <td>29</td>\n      <td>0</td>\n      <td>26.6</td>\n      <td>0.351</td>\n      <td>31</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>183</td>\n      <td>64</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23.3</td>\n      <td>0.672</td>\n      <td>32</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>89</td>\n      <td>66</td>\n      <td>23</td>\n      <td>94</td>\n      <td>28.1</td>\n      <td>0.167</td>\n      <td>21</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>137</td>\n      <td>40</td>\n      <td>35</td>\n      <td>168</td>\n      <td>43.1</td>\n      <td>2.288</td>\n      <td>33</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":69},{"cell_type":"code","source":"df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:14.807385Z","iopub.execute_input":"2025-08-02T09:18:14.807724Z","iopub.status.idle":"2025-08-02T09:18:14.815637Z","shell.execute_reply.started":"2025-08-02T09:18:14.807698Z","shell.execute_reply":"2025-08-02T09:18:14.814475Z"}},"outputs":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"(768, 9)"},"metadata":{}}],"execution_count":70},{"cell_type":"code","source":"x=df.iloc[:,:-1]\ny=df.iloc[:,-1]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:15.564669Z","iopub.execute_input":"2025-08-02T09:18:15.565089Z","iopub.status.idle":"2025-08-02T09:18:15.570785Z","shell.execute_reply.started":"2025-08-02T09:18:15.565061Z","shell.execute_reply":"2025-08-02T09:18:15.569847Z"}},"outputs":[],"execution_count":71},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:16.678577Z","iopub.execute_input":"2025-08-02T09:18:16.678952Z","iopub.status.idle":"2025-08-02T09:18:16.684120Z","shell.execute_reply.started":"2025-08-02T09:18:16.678920Z","shell.execute_reply":"2025-08-02T09:18:16.683145Z"}},"outputs":[],"execution_count":72},{"cell_type":"code","source":"scaler=StandardScaler()\nx=scaler.fit_transform(x)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:17.982381Z","iopub.execute_input":"2025-08-02T09:18:17.982749Z","iopub.status.idle":"2025-08-02T09:18:17.993355Z","shell.execute_reply.started":"2025-08-02T09:18:17.982716Z","shell.execute_reply":"2025-08-02T09:18:17.992349Z"}},"outputs":[],"execution_count":73},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:18.465269Z","iopub.execute_input":"2025-08-02T09:18:18.465801Z","iopub.status.idle":"2025-08-02T09:18:18.471136Z","shell.execute_reply.started":"2025-08-02T09:18:18.465764Z","shell.execute_reply":"2025-08-02T09:18:18.469946Z"}},"outputs":[],"execution_count":74},{"cell_type":"code","source":"x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:18.497426Z","iopub.execute_input":"2025-08-02T09:18:18.497772Z","iopub.status.idle":"2025-08-02T09:18:18.505064Z","shell.execute_reply.started":"2025-08-02T09:18:18.497745Z","shell.execute_reply":"2025-08-02T09:18:18.504029Z"}},"outputs":[],"execution_count":75},{"cell_type":"code","source":"import tensorflow\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense,Dropout,ReLU,PReLU\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.callbacks import EarlyStopping\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:18.528609Z","iopub.execute_input":"2025-08-02T09:18:18.528950Z","iopub.status.idle":"2025-08-02T09:18:18.534579Z","shell.execute_reply.started":"2025-08-02T09:18:18.528912Z","shell.execute_reply":"2025-08-02T09:18:18.533617Z"}},"outputs":[],"execution_count":76},{"cell_type":"code","source":"model=Sequential()\nmodel.add(Dense(32,activation='relu',input_dim=8))\nmodel.add(Dense(1,activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy',optimizer='Adam',metrics=['accuracy'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:18.557563Z","iopub.execute_input":"2025-08-02T09:18:18.557922Z","iopub.status.idle":"2025-08-02T09:18:18.603264Z","shell.execute_reply.started":"2025-08-02T09:18:18.557855Z","shell.execute_reply":"2025-08-02T09:18:18.602114Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"}],"execution_count":77},{"cell_type":"code","source":"model.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:18.605765Z","iopub.execute_input":"2025-08-02T09:18:18.606168Z","iopub.status.idle":"2025-08-02T09:18:18.624580Z","shell.execute_reply.started":"2025-08-02T09:18:18.606133Z","shell.execute_reply":"2025-08-02T09:18:18.623721Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_1\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_1\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)             │           \u001b[38;5;34m288\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m33\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">288</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">33</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m321\u001b[0m (1.25 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">321</span> (1.25 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m321\u001b[0m (1.25 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">321</span> (1.25 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":78},{"cell_type":"code","source":" model.fit(x_train,y_train,batch_size=32,epochs=100,validation_data=(x_test,y_test))","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import keras_tuner as kt","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:40.564965Z","iopub.execute_input":"2025-08-02T09:18:40.565260Z","iopub.status.idle":"2025-08-02T09:18:40.570068Z","shell.execute_reply.started":"2025-08-02T09:18:40.565239Z","shell.execute_reply":"2025-08-02T09:18:40.568922Z"}},"outputs":[],"execution_count":87},{"cell_type":"code","source":"def build_model(hp):\n    model=Sequential()\n    model.add(Dense(32,activation='relu',input_dim=8))\n    model.add(Dense(1,activation='sigmoid'))\n    optimizer=hp.Choice('optimizer',values=['adam','sgd','rmsprop','adadelta'])\n    model.compile(loss='binary_crossentropy',optimizer=optimizer,metrics=['accuracy'])\n    return model","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:35.708521Z","iopub.execute_input":"2025-08-02T09:18:35.708935Z","iopub.status.idle":"2025-08-02T09:18:35.728406Z","shell.execute_reply.started":"2025-08-02T09:18:35.708873Z","shell.execute_reply":"2025-08-02T09:18:35.727335Z"}},"outputs":[],"execution_count":81},{"cell_type":"code","source":"tuner=kt.RandomSearch(build_model,objective=['val_accuracy'],max_trials=5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:35.730602Z","iopub.execute_input":"2025-08-02T09:18:35.731004Z","iopub.status.idle":"2025-08-02T09:18:35.761215Z","shell.execute_reply.started":"2025-08-02T09:18:35.730978Z","shell.execute_reply":"2025-08-02T09:18:35.760217Z"}},"outputs":[{"name":"stdout","text":"Reloading Tuner from ./untitled_project/tuner0.json\n","output_type":"stream"}],"execution_count":82},{"cell_type":"code","source":"tuner.search(x_train,y_train,epochs=5,validation_data=(x_test,y_test))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:35.762202Z","iopub.execute_input":"2025-08-02T09:18:35.762551Z","iopub.status.idle":"2025-08-02T09:18:35.768666Z","shell.execute_reply.started":"2025-08-02T09:18:35.762523Z","shell.execute_reply":"2025-08-02T09:18:35.767694Z"}},"outputs":[],"execution_count":83},{"cell_type":"code","source":"tuner.get_best_hyperparameters()[0].values","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:35.769513Z","iopub.execute_input":"2025-08-02T09:18:35.769812Z","iopub.status.idle":"2025-08-02T09:18:35.790184Z","shell.execute_reply.started":"2025-08-02T09:18:35.769789Z","shell.execute_reply":"2025-08-02T09:18:35.789299Z"}},"outputs":[{"execution_count":84,"output_type":"execute_result","data":{"text/plain":"{'optimizer': 'rmsprop'}"},"metadata":{}}],"execution_count":84},{"cell_type":"code","source":"model=tuner.get_best_models(num_models=1)[0]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:35.791249Z","iopub.execute_input":"2025-08-02T09:18:35.791564Z","iopub.status.idle":"2025-08-02T09:18:36.775009Z","shell.execute_reply.started":"2025-08-02T09:18:35.791533Z","shell.execute_reply":"2025-08-02T09:18:36.773669Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/keras/src/saving/saving_lib.py:757: UserWarning: Skipping variable loading for optimizer 'rmsprop', because it has 2 variables whereas the saved optimizer has 6 variables. \n  saveable.load_own_variables(weights_store.get(inner_path))\n","output_type":"stream"}],"execution_count":85},{"cell_type":"code","source":"model.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:18:36.776069Z","iopub.execute_input":"2025-08-02T09:18:36.776396Z","iopub.status.idle":"2025-08-02T09:18:36.794328Z","shell.execute_reply.started":"2025-08-02T09:18:36.776368Z","shell.execute_reply":"2025-08-02T09:18:36.792978Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)             │           \u001b[38;5;34m288\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m33\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">288</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">33</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m321\u001b[0m (1.25 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">321</span> (1.25 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m321\u001b[0m (1.25 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">321</span> (1.25 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":86},{"cell_type":"code","source":"model.fit(x_train,y_train,epochs=100, batch_size=32,validation_data=(x_test,y_test))","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def build_model(hp):\n    model=Sequential()\n    units=hp.Int('units',min_value=8,max_value=128,step=8)\n    model.add(Dense(units=units,activation='relu',input_dim=8))\n    model.add(Dense(1,activation='sigmoid'))\n    optimizer=hp.Choice('optimizer',values=['adam','sgd','rmsprop','adadelta'])\n    model.compile(optimizer=optimizer,loss='binary_crossentropy',metrics=['accuracy'])\n    return model","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tuner=kt.RandomSearch(build_model,\n                     objective='val_accuracy',\n                      max_trials=5,\n                      directory='my_dir',\n                      project_name='Saad'\n                      \n                     )","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tuner.search(x_train,y_train,epochs=10,validation_data=(x_train,y_train)) ","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"tuner.get_best_hyperparameters()[0].values","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model=tuner.get_best_models(num_models=1)[0]","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model.fit(x_train,y_train,epochs=100,validation_data=(x_test,y_test))","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def build_model(hp):\n    model=Sequential()\n    model.add(Dense(128,activation='relu',input_dim=8))\n    for i in range(hp.Int('num_layers',min_value=1,max_value=10)):\n        model.add(Dense(128,activation='relu'))\n    model.add(Dense(1,activation='sigmoid'))\n    model.compile(optimizer='rmsprop',loss='binary_crossentropy',metrics=['accuracy'])\n    return model\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:22:34.603153Z","iopub.execute_input":"2025-08-02T09:22:34.603927Z","iopub.status.idle":"2025-08-02T09:22:34.610718Z","shell.execute_reply.started":"2025-08-02T09:22:34.603855Z","shell.execute_reply":"2025-08-02T09:22:34.609448Z"}},"outputs":[],"execution_count":96},{"cell_type":"code","source":"tuner=kt.RandomSearch(build_model,objective='val_accuracy',max_trials=5,directory='my_dir',project_name='skr')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:22:35.247554Z","iopub.execute_input":"2025-08-02T09:22:35.247857Z","iopub.status.idle":"2025-08-02T09:22:35.299062Z","shell.execute_reply.started":"2025-08-02T09:22:35.247836Z","shell.execute_reply":"2025-08-02T09:22:35.298178Z"}},"outputs":[],"execution_count":97},{"cell_type":"code","source":"tuner.search(x_train,y_train,epochs=5,validation_data=(x_test,y_test))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:22:38.518868Z","iopub.execute_input":"2025-08-02T09:22:38.519189Z","iopub.status.idle":"2025-08-02T09:23:01.331798Z","shell.execute_reply.started":"2025-08-02T09:22:38.519169Z","shell.execute_reply":"2025-08-02T09:23:01.330869Z"}},"outputs":[{"name":"stdout","text":"Trial 5 Complete [00h 00m 06s]\nval_accuracy: 0.7727272510528564\n\nBest val_accuracy So Far: 0.7857142686843872\nTotal elapsed time: 00h 00m 23s\n","output_type":"stream"}],"execution_count":98},{"cell_type":"code","source":"tuner.get_best_hyperparameters()[0].values","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:23:05.454736Z","iopub.execute_input":"2025-08-02T09:23:05.455397Z","iopub.status.idle":"2025-08-02T09:23:05.462224Z","shell.execute_reply.started":"2025-08-02T09:23:05.455365Z","shell.execute_reply":"2025-08-02T09:23:05.461184Z"}},"outputs":[{"execution_count":99,"output_type":"execute_result","data":{"text/plain":"{'num_layers': 4}"},"metadata":{}}],"execution_count":99},{"cell_type":"code","source":"model=tuner.get_best_models(num_models=1)[0]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T09:24:38.062602Z","iopub.execute_input":"2025-08-02T09:24:38.062951Z","iopub.status.idle":"2025-08-02T09:24:39.181388Z","shell.execute_reply.started":"2025-08-02T09:24:38.062918Z","shell.execute_reply":"2025-08-02T09:24:39.180319Z"}},"outputs":[],"execution_count":101},{"cell_type":"code","source":" model.fit(x_train,y_train,epochs=100,validation_data=(x_test,y_test))","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def build_model(hp):\n    model = Sequential()\n    count = 0\n    \n    for i in range(hp.Int('num_layers', min_value=1, max_value=10)):\n        units = hp.Int('units' + str(i), min_value=8, max_value=128, step=8)\n        activation = hp.Choice('act' + str(i), values=['relu', 'tanh', 'sigmoid'])\n\n        if count == 0:\n            model.add(Dense(units, activation=activation, input_dim=8))\n            model.add(Dropout(hp.Choice('drop',values=[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9])))\n        else:\n            model.add(Dense(units, activation=activation))\n            model.add(Dropout(hp.Choice('drop',values=[0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9])))\n        \n        count += 1\n\n    model.add(Dense(1, activation='sigmoid'))\n\n    model.compile(\n        loss='binary_crossentropy',\n        optimizer=hp.Choice('optimizer', values=['rmsprop', 'adam', 'sgd', 'adadelta']),\n        metrics=['accuracy']\n    )\n\n    return model","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T10:04:56.236441Z","iopub.execute_input":"2025-08-02T10:04:56.236865Z","iopub.status.idle":"2025-08-02T10:04:56.246814Z","shell.execute_reply.started":"2025-08-02T10:04:56.236829Z","shell.execute_reply":"2025-08-02T10:04:56.245611Z"}},"outputs":[],"execution_count":127},{"cell_type":"code","source":"tuner=kt.RandomSearch(build_model,\n                     objective='val_accuracy',\n                      max_trials=3,\n                      directory='my_dir',\n                      project_name='Final1'\n                     )","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T10:06:33.366870Z","iopub.execute_input":"2025-08-02T10:06:33.367268Z","iopub.status.idle":"2025-08-02T10:06:33.417755Z","shell.execute_reply.started":"2025-08-02T10:06:33.367242Z","shell.execute_reply":"2025-08-02T10:06:33.416539Z"}},"outputs":[],"execution_count":133},{"cell_type":"code","source":"tuner.search(x_train,y_train,epochs=5,validation_data=(x_test,y_test))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T10:06:33.775469Z","iopub.execute_input":"2025-08-02T10:06:33.775785Z","iopub.status.idle":"2025-08-02T10:06:54.450599Z","shell.execute_reply.started":"2025-08-02T10:06:33.775764Z","shell.execute_reply":"2025-08-02T10:06:54.448376Z"}},"outputs":[{"name":"stdout","text":"Trial 3 Complete [00h 00m 09s]\nval_accuracy: 0.6428571343421936\n\nBest val_accuracy So Far: 0.6428571343421936\nTotal elapsed time: 00h 00m 21s\n","output_type":"stream"}],"execution_count":134},{"cell_type":"code","source":" tuner.get_best_hyperparameters()[0].values","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model=tuner.get_best_models(num_models=1)[0]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T10:07:07.780739Z","iopub.execute_input":"2025-08-02T10:07:07.781416Z","iopub.status.idle":"2025-08-02T10:07:09.441707Z","shell.execute_reply.started":"2025-08-02T10:07:07.781390Z","shell.execute_reply":"2025-08-02T10:07:09.440763Z"}},"outputs":[],"execution_count":136},{"cell_type":"code","source":" model.fit(x_train,y_train,epochs=100,validation_data=(x_test,y_test))","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}